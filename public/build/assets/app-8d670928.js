import{a as U,m as x,b as F,c as q,o as i,d as r,r as b,e as s,f,g as z,S as V,h as D,F as X,l as h,V as T,i as R,G as w,T as M,j as Y,M as J,O as K,k as Q,t as Z,n as G,p as S,P as ee,q as j,w as v,v as y,s as c,u as $,x as P,y as k,z as te,W as se,A as ne,B as W,C as B,D as ae,E as oe,H as le,I as ie,J as re}from"./vendor-5492674f.js";window.axios=U;U.defaults.headers.common["X-Requested-With"]="XMLHttpRequest";const L={computed:{geoserverUrl(){return this.config.geoserver_base_url+"/geoserver/aurin/ows"}},methods:{getWfsFeatureInfo:function(e,t,n){const o=new URLSearchParams({service:"WFS",version:"2.0.0",featureId:n,request:"GetFeature",typeNames:e+":"+t,outputFormat:"application/json"});return this.geoserverUrl+"?"+o.toString()}}},_=(e,t)=>{const n=e.__vccOpts||e;for(const[o,a]of t)n[o]=a;return n},ue={mixins:[L],data(){return{}},computed:{...x({wetlands:"wetlandNames"}),...x(["selectedWetland"])},methods:{...F(["storeWetland"])},mounted(){let e=this,t={sourceId:"wetlands",templates:{item({item:n}){return n.name}},getItems({query:n}){return e.wetlands.filter(function(o){return o.name.match(new RegExp(n,"i"))})},getItemInputValue({item:n}){return n.name},onSelect({item:n}){if(!e.selectedWetland||e.selectedWetland.getId()!=="wetlands."+n.id){const o=e.getWfsFeatureInfo("aurin","wetlands",n.id);e.storeWetland(o)}}};q({container:"#wetland-search",placeholder:"Search by Wetland Name",getSources({query:n}){return[t]}})}},de={id:"wetland-search"};function ce(e,t,n,o,a,l){return i(),r("div",de)}const he=_(ue,[["render",ce]]);function A(e,t){e.getView().fit(t,{padding:[50,50,50,50]})}function O(e){return e.getId().split(".")[1]}const pe={methods:{zoomToFullExtent(e){return A(e,e.get("MAP_EXTENT"))}},components:{WetlandSearch:he},props:["protectionStatus","map"],emits:["update:protectionStatus"],mounted(){}},me={class:"map-controls"},_e={class:"row justify-content-center align-items-center"},fe={class:"col-auto"},be=s("i",{class:"bi bi-arrows-angle-expand"},null,-1),Se=[be],ge={class:"col-auto"},we={class:"col-auto"},ve={class:"form-floating"},ye=["value"],Ce=z('<option value="Conservation Park">Conservation Park</option><option value="Heritage River">Heritage River</option><option value="Natural Catchment Area">Natural Catchment Area</option><option value="Nature Conservation Reserve">Nature Conservation Reserve</option><option value="Natural Features Reserve">Natural Features Reserve</option><option value="National Park">National Park</option><option value="Private Nature Reserve">Private Nature Reserve</option><option value="Ramsar">Ramsar Site</option><option value="Reference Area">Reference Area</option><option value="State Park">State Park</option><option value="Other">Other</option><option value="none">No protection</option><option value="any">Any protection</option><option value="all">No Filter</option>',14),We=[Ce],xe=s("label",{for:"protectionStatus"},"Filter by protection status",-1);function Ae(e,t,n,o,a,l){const d=b("WetlandSearch");return i(),r("div",me,[s("form",null,[s("div",_e,[s("div",fe,[s("button",{class:"btn btn-sm btn-light",type:"button",onClick:t[0]||(t[0]=p=>l.zoomToFullExtent(n.map))},Se)]),s("div",ge,[f(d)]),s("div",we,[s("div",ve,[s("select",{class:"form-select","aria-label":"Filter by protection status",name:"protection_status",id:"protectionStatus",value:n.protectionStatus,onInput:t[1]||(t[1]=p=>e.$emit("update:protectionStatus",p.target.value))},We,40,ye),xe])])])])])}const Fe=_(pe,[["render",Ae]]),$e=new V({stroke:new D({color:"#3f3f3f",width:2}),fill:new X({color:"rgba(255,184,0,0.6)"})}),Pe=[144.1168836932806,-38.56752038512003,146.16343402067832,-37.2082605301041],ke={components:{MapControls:Fe},data(){return{sidebar:null,wetlandName:"",layers:{wetlands:null,selected:null},viewparams:{wetlands:{protection:"all"}},map:null}},computed:{...x(["selectedWetland"])},mixins:[L],methods:{buildViewParams(e){return h.reduce(e,function(t,n,o){return t=(t!==""?t+",":t)+o+":"+n,t},"")},updateProtectionStatus(e){this.viewparams.wetlands.protection=e;let t=this.layers.wetlands.getSource();t.updateParams(h.merge(t.getParams(),{VIEWPARAMS:this.buildViewParams(this.viewparams.wetlands)}))},selectFeature(e){let t=this;const n=t.layers.wetlands.getSource().getFeatureInfoUrl(e.coordinate,t.map.getView().getResolution(),"EPSG:3857",{INFO_FORMAT:"application/json"});this.storeWetland(n)},renderSelectedFeature(e){let t=this;t.layers.selected.getSource().clear(),e&&(t.layers.selected.getSource().addFeature(e),A(t.map,e.getGeometry().getExtent()),t.pushWetlandInfoRoute(e))},pushWetlandInfoRoute(e){let t=O(e);t!==this.$route.params.id&&this.$router.push({name:"wetland-report",params:{id:t}})},pushHomeRoute(){this.$router.push({name:"intro"})},...F(["storeWetland"])},watch:{selectedWetland(e){e?this.pushWetlandInfoRoute(e):this.pushHomeRoute(),this.renderSelectedFeature(e)}},mounted(){let e=this;const t=new T({source:new R({url:e.geoserverUrl+"?service=WFS&version=1.1.0&request=GetFeature&typeName=aurin:mw_boundary_simplified&outputFormat=application/json",format:new w}),style:new V({stroke:new D({color:"#000",width:"1"})})});e.layers.wetlands=new M({source:new Y({url:e.geoserverUrl,params:{LAYERS:"aurin:wetlands",TILED:!0,VIEWPARAMS:this.buildViewParams(this.viewparams.wetlands)}})}),e.layers.selected=new T({source:new R({}),style:$e}),e.map=new J({target:"map",layers:[new M({source:new K}),t,this.layers.wetlands,this.layers.selected],view:new Q({center:[0,0],zoom:2})}),e.map.set("MAP_EXTENT",Z(Pe,"EPSG:7844","EPSG:3857")),A(e.map,e.map.get("MAP_EXTENT")),e.map.on("singleclick",e.selectFeature)}},Le={class:"col-4 sidebar"},Ne={class:"col-8 viewport"},Ie={id:"viewport"},Ee=s("div",{id:"map"},null,-1);function Te(e,t,n,o,a,l){const d=b("router-view"),p=b("MapControls");return i(),r(S,null,[s("div",Le,[(i(),G(d,{name:"sidebar",key:e.$route.path,feature:e.selectedWetland},null,8,["feature"]))]),s("div",Ne,[s("div",Ie,[f(p,{protectionStatus:this.viewparams.wetlands.protection,"onUpdate:protectionStatus":l.updateProtectionStatus,map:a.map},null,8,["protectionStatus","onUpdate:protectionStatus","map"]),Ee])])],64)}const Re=_(ke,[["render",Te]]),Me={name:"SidebarXhrContent",data(){return{content:"Loading ..."}},watch:{},computed:{contentPath(){return this.$route.name?"/content/"+this.$route.name:null}},mounted(){const e=this;e.contentPath&&axios.get(e.contentPath).then(function(t){e.content=t.data}).then(function(){var t=[].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));t.map(function(n){return new ee(n)})})}},Ue=["innerHTML"];function Ve(e,t,n,o,a,l){return i(),r("div",{innerHTML:a.content},null,8,Ue)}const g=_(Me,[["render",Ve]]);const De={props:["landUseData","index"],data(){return{showAllData:!1}},methods:{toggleTable(){this.showAllData=!this.showAllData},showDataRow(e){return e===0||this.showAllData}},mounted(){let e=[],t=this,n=t.landUseData;h.forEach(n.data,function(a){let l={name:a.usage,hoverinfo:"name",x:[],y:[n.label],type:"bar",orientation:"h"};l.x.push(a.percentage),e.push(l)});let o=t.$el.getElementsByClassName("landUseChart")[0];j.newPlot(o,e,{showlegend:!1,margin:{t:0,b:0,l:0,r:0,pad:0},barmode:"stack",height:20,yaxis:{zeroline:!1,showgrid:!1,visible:!1},xaxis:{visible:!1,range:[0,100]}},{displayModeBar:!1,responsive:!0})}},Ge=s("i",{class:"bi bi-clipboard-data"},null,-1),je=[Ge],Be=s("div",{class:"landUseChart"},null,-1),Oe={class:"landUseTable"},He={class:"table"},qe={class:"text-end"};function ze(e,t,n,o,a,l){return i(),r("div",null,[v(s("button",{type:"button",class:"btn btn-sm float-end",onClick:t[0]||(t[0]=d=>l.toggleTable())},je,512),[[y,n.landUseData.data.length>1]]),s("h3",null,c(n.landUseData.label),1),Be,s("div",Oe,[s("table",He,[(i(!0),r(S,null,$(n.landUseData.data,(d,p)=>v((i(),r("tr",null,[s("td",null,c(d.usage),1),s("td",qe,c(d.percentage),1)],512)),[[y,l.showDataRow(p)]])),256))])])])}const Xe=_(De,[["render",ze]]);const Ye={props:["seasonalCounts","showChart","index"],data(){return{chartTitle:"Latham's Snipe Project Counts By Season"}},methods:{drawSeasonalCountsChart(){let e=[],t=this,n={x:[],y:[],type:"bar",orientation:"v"};t.seasonalCounts.forEach(function(a){n.x.push(a.season),n.y.push(a.count)}),e.push(n);let o=t.$el.getElementsByClassName("seasonalCountChart")[0];j.newPlot(o,e,{showlegend:!1,margin:{t:0,l:20,r:30,pad:0},autosize:!0,height:400},{displayModeBar:!1,responsive:!0})}},mounted(){this.drawSeasonalCountsChart()}},Je=e=>(P("data-v-d4579635"),e=e(),k(),e),Ke=Je(()=>s("div",{class:"seasonalCountChart"},null,-1)),Qe=[Ke];function Ze(e,t,n,o,a,l){return i(),r("div",null,Qe)}const et=_(Ye,[["render",Ze],["__scopeId","data-v-d4579635"]]);const tt={name:"SpeciesList",emits:["closed"],props:{visible:Boolean,speciesList:Array,title:String,id:String},data(){return{modal:null}},watch:{visible:function(){this.toggleModal()}},methods:{toggleModal(){this.visible?this.modal.show():this.modal.hide()},isThreatened(e){return h.isArray(e.conservation)?"No":"Yes"},commonNames(e){let t;return e.hasOwnProperty("common_names")?t=e.common_names.join(", "):t=e.common_name,t}},mounted(){const e=this;let t=document.getElementById(this.id);this.modal=new te(t),t.addEventListener("hide.bs.modal",function(n){console.log("hide"),e.$emit("closed")}),this.toggleModal()}},N=e=>(P("data-v-dbe29fb7"),e=e(),k(),e),st=["id"],nt={class:"modal-dialog modal-xl"},at={class:"modal-content"},ot={class:"modal-header"},lt={class:"modal-title"},it=N(()=>s("button",{type:"button",class:"btn-close","data-bs-dismiss":"modal","aria-label":"Close"},null,-1)),rt={class:"modal-body"},ut={class:"table table-bordered"},dt=N(()=>s("tr",null,[s("th",null,"Scientific Name"),s("th",null,"Common names"),s("th",null,"Threatened?"),s("th",null,"MoreÂ info")],-1)),ct=["href"],ht=N(()=>s("i",{class:"bi bi-box-arrow-up-right"},null,-1)),pt=[ht];function mt(e,t,n,o,a,l){return i(),r("div",null,[s("div",{id:n.id,class:"modal",tabindex:"-1"},[s("div",nt,[s("div",at,[s("div",ot,[s("h5",lt,c(n.title),1),it]),s("div",rt,[s("table",ut,[dt,(i(!0),r(S,null,$(n.speciesList,d=>(i(),r("tr",null,[s("td",null,c(d.scientific_name),1),s("td",null,c(l.commonNames(d)),1),s("td",null,c(l.isThreatened(d)),1),s("td",null,[s("a",{href:"https://bie.ala.org.au/species/"+d.guid,target:"_blank"},pt,8,ct)])]))),256))])])])])],8,st)])}const _t=_(tt,[["render",mt],["__scopeId","data-v-dbe29fb7"]]);const ft={name:"WetlandReport",components:{SpeciesList:_t,SeasonalCountsChart:et,LandUseChart:Xe},props:["feature","id"],mixins:[L],data(){return{showWaterbirdList:!1,showFrogList:!1,landuseEndpointMap:{"Vicmap Planning Zones":"planning/zones","Vicmap Planning Overlays":"planning/overlays","VLUIS Property Classification":"vluis/property","VLUIS Land Use":"vluis/alum","VLUIS Land Cover":"vluis/landcover","Catchment Land use":"catchment"},stateAbbreviations:{Victoria:"vic",Queensland:"qld","New South Wales":"nsw",Tasmania:"tas","Australian Capital Territory":"act","Northern Territory":"nt","Western Australia":"wa","South Australia":"sa"},content:"",alaWaterbirdSpecies:null,alaFrogSpecies:null,landuse:[],snipe:{seasonalCounts:[],alaSeasonalCounts:[]},showSeasonalCountChart:!1,showAlaSeasonalCountChart:!1}},watch:{feature(e){e&&this.renderWetlandInfo(e)}},computed:{wetlandName(){return this.feature.get("name")},protectionStatus(){return this.feature===null||!this.feature.get("protection_status")?"Unknown":this.feature.get("protection_status")[0]===null?"None":this.feature.get("protection_status").join(", ")},featureStateAbbreviations(){return h.values(h.pick(this.stateAbbreviations,this.feature.get("states")))},threatenedAlaWaterbirdSpecies(){let e=this;return e.alaWaterbirdSpecies?h.filter(e.alaWaterbirdSpecies,function(t){let n=["aus",...e.featureStateAbbreviations],o=Object.keys(t.conservation);return h.intersection(n,o).length>0}):null},threatenedAlaFrogSpecies(){let e=this;return e.alaFrogSpecies?h.filter(e.alaFrogSpecies,function(t){let n=["aus",...e.featureStateAbbreviations],o=Object.keys(t.conservation);return h.intersection(n,o).length>0}):null},maxSnipeSeasonCount(){return this.snipe.seasonalCounts.length>0?h.maxBy(this.snipe.seasonalCounts,e=>parseInt(e.count)):null},maxSnipeAlaSeasonCount(){return this.snipe.alaSeasonalCounts.length>0?h.maxBy(this.snipe.alaSeasonalCounts,e=>parseInt(e.count)):null},maxSnipeSeasonLabel(){let e="?";return this.snipe.seasonalCounts.length>0&&(e="No data",this.maxSnipeSeasonCount&&(e=this.maxSnipeSeasonCount.season+": "+this.maxSnipeSeasonCount.count)),e},maxSnipeAlaSeasonLabel(){let e="?";return this.snipe.alaSeasonalCounts.length>0&&(e="No data",this.maxSnipeAlaSeasonCount&&(e=this.maxSnipeAlaSeasonCount.season+": "+this.maxSnipeAlaSeasonCount.count)),e}},methods:{featureToWkt(e,t){let n={featureProjection:"EPSG:3857"};return typeof t<"u"&&(n.dataProjection="EPSG:"+t),new se().writeFeature(e,n)},bufferedFeature(e){let t=.35,n=e.clone();n.getGeometry().transform("EPSG:3857","EPSG:7844");let o=new w().writeFeatureObject(n),a=ne(o,t,{units:"kilometers"});return a=new w().readFeature(a),a.getGeometry().transform("EPSG:7844","EPSG:3857"),a},fetchAlaWaterbirds(e){let t=this;e?axios.post("/app/area/ala-birds",{wkt:t.featureToWkt(e,7844)}).then(function(n){t.alaWaterbirdSpecies=n.data}):t.alaWaterbirdSpecies=null},fetchAlaFrogs(e){let t=this;e?axios.post("/app/area/ala-frogs",{wkt:t.featureToWkt(e,7844)}).then(function(n){t.alaFrogSpecies=n.data}):t.alaFrogSpecies=null},fetchLandUsage(e){let t=this;t.landuse.length=0,e&&h.forIn(t.landuseEndpointMap,(n,o)=>{t.fetchLandUsePercentage(e,o,n)})},async fetchLandUsePercentage(e,t,n){let o=this;await axios.post("/app/landuse/"+n,{wkt:o.featureToWkt(o.bufferedFeature(e),7844)}).then(function(a){o.landUsePushAndSort({label:t,data:a.data})})},landUsePushAndSort(e){let t=this;t.landuse.push(e),t.landuse=h.sortBy(t.landuse,"label")},async fetchLathamsSnipeSeasonalCounts(e){let t=this;t.snipe.seasonalCounts.length=0,e&&(t.snipe.seasonalCounts=await axios.post("/app/snipe/seasonal-counts",{wkt:t.featureToWkt(e,7844)}).then(function(n){return n.data}))},async fetchSnipeAlaSeasonalCounts(e){let t=this;t.snipe.alaSeasonalCounts.length=0,e&&(t.snipe.alaSeasonalCounts=await axios.post("/app/snipe/ala-seasonal-counts",{wkt:t.featureToWkt(e,7844)}).then(function(n){return n.data}))},renderWetlandInfo(e){this.fetchAlaWaterbirds(e),this.fetchAlaFrogs(e),this.fetchLathamsSnipeSeasonalCounts(e),this.fetchSnipeAlaSeasonalCounts(e),this.fetchLandUsage(e)},...F(["storeWetland"])},mounted(){const e=this;if(e.feature&&O(e.feature)===e.id)e.renderWetlandInfo(e.feature);else{const t=e.getWfsFeatureInfo("aurin","wetlands",e.id);e.storeWetland(t)}}},u=e=>(P("data-v-6d1d7f9d"),e=e(),k(),e),bt=u(()=>s("h1",null,"Wetland Values Report",-1)),St=u(()=>s("p",null," The wetland values report tool provides a summary of the waterbird diversity at a selected wetland. Dominant land uses are reported within 350m of the wetland boundary. ",-1)),gt={class:"table"},wt=u(()=>s("td",null,"Wetland name",-1)),vt=u(()=>s("td",null,"Protection Status",-1)),yt=u(()=>s("h2",null,"ALA Records",-1)),Ct={class:"table"},Wt=u(()=>s("tr",null,[s("th",{colspan:"3"},"Waterbirds")],-1)),xt=u(()=>s("button",{class:"btn btn-light btn-sm",title:"View species listing/info"},[s("i",{class:"bi bi-list-columns"})],-1)),At=[xt],Ft=u(()=>s("tr",null,[s("th",{colspan:"3"},"Frogs")],-1)),$t=u(()=>s("button",{class:"btn btn-light btn-sm",title:"View species listing/info"},[s("i",{class:"bi bi-list-columns"})],-1)),Pt=[$t],kt=u(()=>s("h2",null,"Latham's snipe data",-1)),Lt=u(()=>s("p",null," Latham's Snipe is a mysterious migratory waterbird (shorebird) that is cryptic in its plumage and behaviour. This means it is often overlooked in monitoring and assessment. As a result, its wetland habitats are frequently threatened by land use change. ",-1)),Nt={class:"table"},It=u(()=>s("td",null,"Maximum number of Latham's Snipe",-1)),Et=u(()=>s("i",{class:"bi bi-bar-chart"},null,-1)),Tt=[Et],Rt={key:0},Mt={colspan:"3"},Ut=u(()=>s("td",null,"Maximum number of Latham's Snipe (ALA)",-1)),Vt=u(()=>s("i",{class:"bi bi-bar-chart"},null,-1)),Dt=[Vt],Gt={key:1},jt={colspan:"3"},Bt=u(()=>s("h2",null,"Land use",-1)),Ot=u(()=>s("p",null," The built environment surrounding a wetland will influence its value for biodiversity. A wetland surrounded by housing or industry may provide less habitat for wetland birds than a wetland located near other wetlands. But it may also provide a refuge for birds transiting through an urban landscape. ",-1)),Ht={class:"table"},qt={key:0},zt=u(()=>s("td",null,"?",-1)),Xt=[zt],Yt={key:1},Jt={colspan:"2"},Kt={class:"w-100"},Qt=u(()=>s("thead",null,[s("tr",null,[s("th",null,"Source / Primary classification"),s("th",null,"%")])],-1)),Zt={colspan:"2"};function es(e,t,n,o,a,l){const d=b("seasonal-counts-chart"),p=b("land-use-chart"),E=b("species-list");return i(),r(S,null,[bt,St,n.feature?(i(),r(S,{key:0},[s("table",gt,[s("tbody",null,[s("tr",null,[wt,s("td",null,c(l.wetlandName),1)]),s("tr",null,[vt,s("td",null,c(l.protectionStatus),1)])])]),yt,s("table",Ct,[s("tbody",null,[Wt,s("tr",null,[s("td",null,c(a.alaWaterbirdSpecies==null?"?":a.alaWaterbirdSpecies.length)+" species",1),s("td",null,c(l.threatenedAlaWaterbirdSpecies==null?"?":l.threatenedAlaWaterbirdSpecies.length)+" threatened",1),s("td",{class:"text-end",onClick:t[0]||(t[0]=m=>a.showWaterbirdList=!0)},At)]),Ft,s("tr",null,[s("td",null,c(a.alaFrogSpecies==null?"?":a.alaFrogSpecies.length)+" species",1),s("td",null,c(l.threatenedAlaFrogSpecies==null?"?":l.threatenedAlaFrogSpecies.length)+" threatened",1),s("td",{class:"text-end",onClick:t[1]||(t[1]=m=>a.showFrogList=!0)},Pt)])])]),kt,Lt,s("table",Nt,[s("tbody",null,[s("tr",null,[It,s("td",null,c(l.maxSnipeSeasonLabel),1),s("td",null,[v(s("button",{type:"button",class:"btn btn-sm float-end",onClick:t[2]||(t[2]=m=>a.showSeasonalCountChart=!a.showSeasonalCountChart)},Tt,512),[[y,a.snipe.seasonalCounts.length&&l.maxSnipeSeasonCount]])])]),a.showSeasonalCountChart?(i(),r("tr",Rt,[s("td",Mt,[f(d,{"seasonal-counts":a.snipe.seasonalCounts,index:1},null,8,["seasonal-counts"])])])):W("",!0),s("tr",null,[Ut,s("td",null,c(l.maxSnipeAlaSeasonLabel),1),s("td",null,[v(s("button",{type:"button",class:"btn btn-sm float-end",onClick:t[3]||(t[3]=m=>a.showAlaSeasonalCountChart=!a.showAlaSeasonalCountChart)},Dt,512),[[y,a.snipe.alaSeasonalCounts.length&&l.maxSnipeAlaSeasonCount]])])]),a.showAlaSeasonalCountChart?(i(),r("tr",Gt,[s("td",jt,[f(d,{"seasonal-counts":a.snipe.alaSeasonalCounts,index:2},null,8,["seasonal-counts"])])])):W("",!0)])]),Bt,Ot,s("table",Ht,[s("tbody",null,[a.landuse.length?(i(),r("tr",Yt,[s("td",Jt,[s("table",Kt,[Qt,(i(!0),r(S,null,$(a.landuse,(m,H)=>(i(),r("tbody",null,[s("tr",null,[s("td",Zt,[(i(),G(p,{landUseData:m,key:m.label,index:H},null,8,["landUseData","index"]))])])]))),256))])])])):(i(),r("tr",qt,Xt))])]),f(E,{visible:a.showWaterbirdList,"species-list":a.alaWaterbirdSpecies,title:"Waterbirds",id:"list-waterbirds",onClosed:t[4]||(t[4]=m=>a.showWaterbirdList=!1)},null,8,["visible","species-list"]),f(E,{visible:a.showFrogList,"species-list":a.alaFrogSpecies,title:"Frogs",id:"list-frogs",onClosed:t[5]||(t[5]=m=>a.showFrogList=!1)},null,8,["visible","species-list"])],64)):W("",!0)],64)}const ts=_(ft,[["render",es],["__scopeId","data-v-6d1d7f9d"]]);B.defs("EPSG:7844","+proj=longlat +ellps=GRS80 +no_defs +type=crs");ae(B);const ss=oe({history:le(),routes:[{path:"/",name:"intro",components:{sidebar:g}},{path:"/about",name:"about",components:{sidebar:g}},{path:"/terms",name:"terms",components:{sidebar:g}},{path:"/contact",name:"contact",components:{sidebar:g}},{path:"/wetland/:id",name:"wetland-report",components:{sidebar:ts},props:!0}]}),I=ie({state(){return{selectedWetland:null,speciesInfo:null,wetlandNames:[]}},mutations:{storeWetlandNames(e,t){e.wetlandNames=t},selectWetland(e,t){let n=null;t!==null&&(["protection_status","states"].forEach(function(a){t.properties[a]=JSON.parse(t.properties[a])}),n=new w().readFeature(t)),e.selectedWetland=n},updateSpeciesInfo(e,t){e.speciesInfo=t}},actions:{async storeWetland(e,t){let n=await axios.get(t).then(function(o){let a=null;return o.data.features.length&&(a=o.data.features[0]),a});e.commit("selectWetland",n)}}});axios.get("/app/wetlands").then(function(e){I.commit("storeWetlandNames",e.data)});axios.get("/app/species-info").then(function(e){I.commit("updateSpeciesInfo",e.data)});const C=re({components:{"map-viewport":Re}});C.config.globalProperties.config=await axios.get("/app/config").then(function(e){return e.data});C.use(I);C.use(ss);C.mount("#app");
