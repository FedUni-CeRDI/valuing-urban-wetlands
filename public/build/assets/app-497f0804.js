import{a as I,m as x,b as W,c as G,o as r,d as i,r as _,e as n,f as w,g as E,S as L,h as R,F as j,l as u,V as N,i as k,G as b,T as F,j as O,M as H,O as z,k as X,t as q,n as T,p as m,P as U,w as g,v,q as d,s as M,u as K,x as Q,W as Y,y as Z,z as y,A as V,B as J,C as ee,D as te,E as ne,H as ae}from"./vendor-77f4ad1a.js";window.axios=I;I.defaults.headers.common["X-Requested-With"]="XMLHttpRequest";const P={computed:{geoserverUrl(){return this.config.geoserver_base_url+"/geoserver/aurin/ows"}},methods:{getWfsFeatureInfo:function(e,t,a){const o=new URLSearchParams({service:"WFS",version:"2.0.0",featureId:a,request:"GetFeature",typeNames:e+":"+t,outputFormat:"application/json"});return this.geoserverUrl+"?"+o.toString()}}},h=(e,t)=>{const a=e.__vccOpts||e;for(const[o,s]of t)a[o]=s;return a},se={mixins:[P],data(){return{}},computed:{...x({wetlands:"wetlandNames"}),...x(["selectedWetland"])},methods:{...W(["storeWetland"])},mounted(){let e=this,t={sourceId:"wetlands",templates:{item({item:a}){return a.name}},getItems({query:a}){return e.wetlands.filter(function(o){return o.name.match(new RegExp(a,"i"))})},getItemInputValue({item:a}){return a.name},onSelect({item:a}){if(!e.selectedWetland||e.selectedWetland.getId()!=="wetlands."+a.id){const o=e.getWfsFeatureInfo("aurin","wetlands",a.id);e.storeWetland(o)}}};G({container:"#wetland-search",placeholder:"Search by Wetland Name",getSources({query:a}){return[t]}})}},oe={id:"wetland-search"};function le(e,t,a,o,s,l){return r(),i("div",oe)}const re=h(se,[["render",le]]);function A(e,t){e.getView().fit(t,{padding:[50,50,50,50]})}function B(e){return e.getId().split(".")[1]}const ie={methods:{zoomToFullExtent(e){return A(e,e.get("MAP_EXTENT"))}},components:{WetlandSearch:re},props:["protectionStatus","map"],emits:["update:protectionStatus"],mounted(){}},ue={class:"map-controls"},ce={class:"row justify-content-center align-items-center"},de={class:"col-auto"},pe=n("i",{class:"bi bi-arrows-angle-expand"},null,-1),he=[pe],me={class:"col-auto"},_e={class:"col-auto"},fe={class:"form-floating"},Se=["value"],we=E('<option value="Conservation Park">Conservation Park</option><option value="Heritage River">Heritage River</option><option value="Natural Catchment Area">Natural Catchment Area</option><option value="Nature Conservation Reserve">Nature Conservation Reserve</option><option value="Natural Features Reserve">Natural Features Reserve</option><option value="National Park">National Park</option><option value="Private Nature Reserve">Private Nature Reserve</option><option value="Ramsar">Ramsar Site</option><option value="Reference Area">Reference Area</option><option value="State Park">State Park</option><option value="Other">Other</option><option value="none">No protection</option><option value="any">Any protection</option><option value="all">No Filter</option>',14),be=[we],ge=n("label",{for:"protectionStatus"},"Filter by protection status",-1);function ve(e,t,a,o,s,l){const c=_("WetlandSearch");return r(),i("div",ue,[n("form",null,[n("div",ce,[n("div",de,[n("button",{class:"btn btn-sm btn-light",type:"button",onClick:t[0]||(t[0]=p=>l.zoomToFullExtent(a.map))},he)]),n("div",me,[w(c)]),n("div",_e,[n("div",fe,[n("select",{class:"form-select","aria-label":"Filter by protection status",name:"protection_status",id:"protectionStatus",value:a.protectionStatus,onInput:t[1]||(t[1]=p=>e.$emit("update:protectionStatus",p.target.value))},be,40,Se),ge])])])])])}const Ce=h(ie,[["render",ve]]),ye=new L({stroke:new R({color:"#3f3f3f",width:2}),fill:new j({color:"rgba(255,184,0,0.6)"})}),xe=[144.1168836932806,-38.56752038512003,146.16343402067832,-37.2082605301041],Ae={components:{MapControls:Ce},data(){return{sidebar:null,wetlandName:"",layers:{wetlands:null,selected:null},viewparams:{wetlands:{protection:"all"}},map:null}},computed:{...x(["selectedWetland"])},mixins:[P],methods:{buildViewParams(e){return u.reduce(e,function(t,a,o){return t=(t!==""?t+",":t)+o+":"+a,t},"")},updateProtectionStatus(e){this.viewparams.wetlands.protection=e;let t=this.layers.wetlands.getSource();t.updateParams(u.merge(t.getParams(),{VIEWPARAMS:this.buildViewParams(this.viewparams.wetlands)}))},selectFeature(e){let t=this;const a=t.layers.wetlands.getSource().getFeatureInfoUrl(e.coordinate,t.map.getView().getResolution(),"EPSG:3857",{INFO_FORMAT:"application/json"});this.storeWetland(a)},renderSelectedFeature(e){let t=this;t.layers.selected.getSource().clear(),e&&(t.layers.selected.getSource().addFeature(e),A(t.map,e.getGeometry().getExtent()),t.pushWetlandInfoRoute(e))},pushWetlandInfoRoute(e){let t=B(e);t!==this.$route.params.id&&this.$router.push({name:"wetland-report",params:{id:t}})},pushHomeRoute(){this.$router.push({name:"intro"})},...W(["storeWetland"])},watch:{selectedWetland(e){e?this.pushWetlandInfoRoute(e):this.pushHomeRoute(),this.renderSelectedFeature(e)}},mounted(){let e=this;const t=new N({source:new k({url:e.geoserverUrl+"?service=WFS&version=1.1.0&request=GetFeature&typeName=aurin:mw_boundary_simplified&outputFormat=application/json",format:new b}),style:new L({stroke:new R({color:"#000",width:"1"})})});e.layers.wetlands=new F({source:new O({url:e.geoserverUrl,params:{LAYERS:"aurin:wetlands",TILED:!0,VIEWPARAMS:this.buildViewParams(this.viewparams.wetlands)}})}),e.layers.selected=new N({source:new k({}),style:ye}),e.map=new H({target:"map",layers:[new F({source:new z}),t,this.layers.wetlands,this.layers.selected],view:new X({center:[0,0],zoom:2})}),e.map.set("MAP_EXTENT",q(xe,"EPSG:7844","EPSG:3857")),A(e.map,e.map.get("MAP_EXTENT")),e.map.on("singleclick",e.selectFeature)}},We={class:"col-4 sidebar"},Pe={class:"col-8 viewport"},$e={id:"viewport"},Ne=n("div",{id:"map"},null,-1);function ke(e,t,a,o,s,l){const c=_("router-view"),p=_("MapControls");return r(),i(m,null,[n("div",We,[(r(),T(c,{name:"sidebar",key:e.$route.path,feature:e.selectedWetland},null,8,["feature"]))]),n("div",Pe,[n("div",$e,[w(p,{protectionStatus:this.viewparams.wetlands.protection,"onUpdate:protectionStatus":l.updateProtectionStatus,map:s.map},null,8,["protectionStatus","onUpdate:protectionStatus","map"]),Ne])])],64)}const Fe=h(Ae,[["render",ke]]),Ie={name:"SidebarXhrContent",data(){return{content:"Loading ..."}},computed:{contentPath(){return this.$route.name?"/content/"+this.$route.name:null}},mounted(){const e=this;e.contentPath&&axios.get(e.contentPath).then(function(t){e.content=t.data})}},Ee=["innerHTML"];function Le(e,t,a,o,s,l){return r(),i("div",{innerHTML:s.content},null,8,Ee)}const S=h(Ie,[["render",Le]]);const Re={props:["landUseData","index"],data(){return{showAllData:!1}},methods:{toggleTable(){this.showAllData=!this.showAllData},showDataRow(e){return e===0||this.showAllData}},mounted(){let e=[],t=this,a=t.landUseData;u.forEach(a.data,function(s){let l={name:s.usage,hoverinfo:"name",x:[],y:[a.label],type:"bar",orientation:"h"};l.x.push(s.percentage),e.push(l)});let o=t.$el.getElementsByClassName("landUseChart")[0];U.newPlot(o,e,{showlegend:!1,margin:{t:0,b:0,l:0,r:0,pad:0},barmode:"stack",height:20,yaxis:{zeroline:!1,showgrid:!1,visible:!1},xaxis:{visible:!1,range:[0,100]}},{displayModeBar:!1,responsive:!0})}},Te=n("i",{class:"bi bi-clipboard-data"},null,-1),Ue=[Te],Me=n("div",{class:"landUseChart"},null,-1),Ve={class:"landUseTable"},Be={class:"table"},De={class:"text-end"};function Ge(e,t,a,o,s,l){return r(),i("div",null,[g(n("button",{type:"button",class:"btn btn-sm float-end",onClick:t[0]||(t[0]=c=>l.toggleTable())},Ue,512),[[v,a.landUseData.data.length>1]]),n("h3",null,d(a.landUseData.label),1),Me,n("div",Ve,[n("table",Be,[(r(!0),i(m,null,M(a.landUseData.data,(c,p)=>g((r(),i("tr",null,[n("td",null,d(c.usage),1),n("td",De,d(c.percentage),1)],512)),[[v,l.showDataRow(p)]])),256))])])])}const je=h(Re,[["render",Ge]]);const Oe={props:["seasonalCounts","showChart","index"],data(){return{chartTitle:"Latham's Snipe Project Counts By Season"}},methods:{drawSeasonalCountsChart(){let e=[],t=this,a={x:[],y:[],type:"bar",orientation:"v"};t.seasonalCounts.forEach(function(s){a.x.push(s.season),a.y.push(s.count)}),e.push(a);let o=t.$el.getElementsByClassName("seasonalCountChart")[0];U.newPlot(o,e,{showlegend:!1,margin:{t:0,l:20,r:30,pad:0},autosize:!0,height:400},{displayModeBar:!1,responsive:!0})}},mounted(){this.drawSeasonalCountsChart()}},He=e=>(K("data-v-d4579635"),e=e(),Q(),e),ze=He(()=>n("div",{class:"seasonalCountChart"},null,-1)),Xe=[ze];function qe(e,t,a,o,s,l){return r(),i("div",null,Xe)}const Ke=h(Oe,[["render",qe],["__scopeId","data-v-d4579635"]]),Qe={name:"WetlandReport",components:{SeasonalCountsChart:Ke,LandUseChart:je},props:["feature","id"],mixins:[P],data(){return{landuseEndpointMap:{"Vicmap Planning Zones":"planning/zones","Vicmap Planning Overlays":"planning/overlays","VLUIS Property Classification":"vluis/property","VLUIS Land Use":"vluis/alum","VLUIS Land Cover":"vluis/landcover","Catchment Land use":"catchment"},stateAbbreviations:{Victoria:"vic",Queensland:"qld","New South Wales":"nsw",Tasmania:"tas","Australian Capital Territory":"act","Northern Territory":"nt","Western Australia":"wa","South Australia":"sa"},content:"",alaSpecies:null,landuse:[],snipe:{seasonalCounts:[],alaSeasonalCounts:[]},showSeasonalCountChart:!1,showAlaSeasonalCountChart:!1}},watch:{feature(e){e&&this.renderWetlandInfo(e)}},computed:{wetlandName(){return this.feature.get("name")},protectionStatus(){return this.feature===null||!this.feature.get("protection_status")?"Unknown":this.feature.get("protection_status")[0]===null?"None":this.feature.get("protection_status").join(", ")},featureStateAbbreviations(){return u.values(u.pick(this.stateAbbreviations,this.feature.get("states")))},threatenedAlaSpecies(){let e=this;return e.alaSpecies?u.filter(e.alaSpecies,function(t){let a=["aus",...e.featureStateAbbreviations],o=Object.keys(t.conservation);return u.intersection(a,o).length>0}):null},maxSnipeSeasonCount(){return this.snipe.seasonalCounts.length>0?u.maxBy(this.snipe.seasonalCounts,e=>parseInt(e.count)):null},maxSnipeAlaSeasonCount(){return this.snipe.alaSeasonalCounts.length>0?u.maxBy(this.snipe.alaSeasonalCounts,e=>parseInt(e.count)):null},maxSnipeSeasonLabel(){let e="?";return this.snipe.seasonalCounts.length>0&&(e="No data",this.maxSnipeSeasonCount&&(e=this.maxSnipeSeasonCount.season+": "+this.maxSnipeSeasonCount.count)),e},maxSnipeAlaSeasonLabel(){let e="?";return this.snipe.alaSeasonalCounts.length>0&&(e="No data",this.maxSnipeAlaSeasonCount&&(e=this.maxSnipeAlaSeasonCount.season+": "+this.maxSnipeAlaSeasonCount.count)),e}},methods:{featureToWkt(e,t){let a={featureProjection:"EPSG:3857"};return typeof t<"u"&&(a.dataProjection="EPSG:"+t),new Y().writeFeature(e,a)},bufferedFeature(e){let t=.35,a=e.clone();a.getGeometry().transform("EPSG:3857","EPSG:7844");let o=new b().writeFeatureObject(a),s=Z(o,t,{units:"kilometers"});return s=new b().readFeature(s),s.getGeometry().transform("EPSG:7844","EPSG:3857"),s},fetchAlaBirds(e){let t=this;e?axios.post("/app/area/ala-birds",{wkt:t.featureToWkt(e,7844)}).then(function(a){t.alaSpecies=a.data}):t.alaSpecies=null},fetchLandUsage(e){let t=this;t.landuse.length=0,e&&u.forIn(t.landuseEndpointMap,(a,o)=>{t.fetchLandUsePercentage(e,o,a)})},async fetchLandUsePercentage(e,t,a){let o=this;await axios.post("/app/landuse/"+a,{wkt:o.featureToWkt(o.bufferedFeature(e),7844)}).then(function(s){o.landUsePushAndSort({label:t,data:s.data})})},landUsePushAndSort(e){let t=this;t.landuse.push(e),t.landuse=u.sortBy(t.landuse,"label")},async fetchLathamsSnipeSeasonalCounts(e){let t=this;t.snipe.seasonalCounts.length=0,e&&(t.snipe.seasonalCounts=await axios.post("/app/snipe/seasonal-counts",{wkt:t.featureToWkt(e,7844)}).then(function(a){return a.data}))},async fetchSnipeAlaSeasonalCounts(e){let t=this;t.snipe.alaSeasonalCounts.length=0,e&&(t.snipe.alaSeasonalCounts=await axios.post("/app/snipe/ala-seasonal-counts",{wkt:t.featureToWkt(e,7844)}).then(function(a){return a.data}))},renderWetlandInfo(e){this.fetchAlaBirds(e),this.fetchLathamsSnipeSeasonalCounts(e),this.fetchSnipeAlaSeasonalCounts(e),this.fetchLandUsage(e)},...W(["storeWetland"])},mounted(){const e=this;if(e.feature&&B(e.feature)===e.id)e.renderWetlandInfo(e.feature);else{const t=e.getWfsFeatureInfo("aurin","wetlands",e.id);e.storeWetland(t)}}},Ye=n("h1",null,"Wetland Values Report",-1),Ze={class:"table"},Je=n("td",null,"Wetland name",-1),et=n("td",null,"Protection Status",-1),tt=n("h2",null,"ALA Records",-1),nt={class:"table"},at=n("td",null,"Number of waterbird species",-1),st=n("td",null,"Number of threatened waterbird species",-1),ot=E('<h2>BirdLife Australia records</h2><table class="table"><tbody><tr><td>Reporting rate</td><td>[TBA]</td></tr><tr><td>Breeding metric</td><td>[TBA]</td></tr><tr><td>Conservation metric</td><td>[TBA]</td></tr><tr><td>Condition</td><td>[TBA]</td></tr></tbody></table><h2>Latham&#39;s snipe data</h2>',3),lt={class:"table"},rt=n("td",null,"Maximum number of Latham's Snipe",-1),it=n("i",{class:"bi bi-bar-chart"},null,-1),ut=[it],ct={key:0},dt={colspan:"3"},pt=n("td",null,"Maximum number of Latham's Snipe (ALA)",-1),ht=n("i",{class:"bi bi-bar-chart"},null,-1),mt=[ht],_t={key:1},ft={colspan:"3"},St=n("h2",null,"Land use",-1),wt={class:"table"},bt={key:0},gt=n("td",null,"?",-1),vt=[gt],Ct={key:1},yt={colspan:"2"},xt={class:"w-100"},At=n("thead",null,[n("tr",null,[n("th",null,"Source / Primary classification"),n("th",null,"%")])],-1),Wt={colspan:"2"};function Pt(e,t,a,o,s,l){const c=_("seasonal-counts-chart"),p=_("land-use-chart");return r(),i(m,null,[Ye,a.feature?(r(),i(m,{key:0},[n("table",Ze,[n("tbody",null,[n("tr",null,[Je,n("td",null,d(l.wetlandName),1)]),n("tr",null,[et,n("td",null,d(l.protectionStatus),1)])])]),tt,n("table",nt,[n("tbody",null,[n("tr",null,[at,n("td",null,d(s.alaSpecies==null?"?":s.alaSpecies.length),1)]),n("tr",null,[st,n("td",null,d(l.threatenedAlaSpecies==null?"?":l.threatenedAlaSpecies.length),1)])])]),ot,n("table",lt,[n("tbody",null,[n("tr",null,[rt,n("td",null,d(l.maxSnipeSeasonLabel),1),n("td",null,[g(n("button",{type:"button",class:"btn btn-sm float-end",onClick:t[0]||(t[0]=f=>s.showSeasonalCountChart=!s.showSeasonalCountChart)},ut,512),[[v,s.snipe.seasonalCounts.length&&l.maxSnipeSeasonCount]])])]),s.showSeasonalCountChart?(r(),i("tr",ct,[n("td",dt,[w(c,{"seasonal-counts":s.snipe.seasonalCounts,index:1},null,8,["seasonal-counts"])])])):y("",!0),n("tr",null,[pt,n("td",null,d(l.maxSnipeAlaSeasonLabel),1),n("td",null,[g(n("button",{type:"button",class:"btn btn-sm float-end",onClick:t[1]||(t[1]=f=>s.showAlaSeasonalCountChart=!s.showAlaSeasonalCountChart)},mt,512),[[v,s.snipe.alaSeasonalCounts.length&&l.maxSnipeAlaSeasonCount]])])]),s.showAlaSeasonalCountChart?(r(),i("tr",_t,[n("td",ft,[w(c,{"seasonal-counts":s.snipe.alaSeasonalCounts,index:2},null,8,["seasonal-counts"])])])):y("",!0)])]),St,n("table",wt,[n("tbody",null,[s.landuse.length?(r(),i("tr",Ct,[n("td",yt,[n("table",xt,[At,(r(!0),i(m,null,M(s.landuse,(f,D)=>(r(),i("tbody",null,[n("tr",null,[n("td",Wt,[(r(),T(p,{landUseData:f,key:f.label,index:D},null,8,["landUseData","index"]))])])]))),256))])])])):(r(),i("tr",bt,vt))])])],64)):y("",!0)],64)}const $t=h(Qe,[["render",Pt]]);V.defs("EPSG:7844","+proj=longlat +ellps=GRS80 +no_defs +type=crs");J(V);const Nt=ee({history:te(),routes:[{path:"/",name:"intro",components:{sidebar:S}},{path:"/about",name:"about",components:{sidebar:S}},{path:"/terms",name:"terms",components:{sidebar:S}},{path:"/contact",name:"contact",components:{sidebar:S}},{path:"/wetland/:id",name:"wetland-report",components:{sidebar:$t},props:!0}]}),$=ne({state(){return{selectedWetland:null,speciesInfo:null,wetlandNames:[]}},mutations:{storeWetlandNames(e,t){e.wetlandNames=t},selectWetland(e,t){let a=null;t!==null&&(["protection_status","states"].forEach(function(s){t.properties[s]=JSON.parse(t.properties[s])}),a=new b().readFeature(t)),e.selectedWetland=a},updateSpeciesInfo(e,t){e.speciesInfo=t}},actions:{async storeWetland(e,t){let a=await axios.get(t).then(function(o){let s=null;return o.data.features.length&&(s=o.data.features[0]),s});e.commit("selectWetland",a)}}});axios.get("/app/wetlands").then(function(e){$.commit("storeWetlandNames",e.data)});axios.get("/app/species-info").then(function(e){$.commit("updateSpeciesInfo",e.data)});const C=ae({components:{"map-viewport":Fe}});C.config.globalProperties.config=await axios.get("/app/config").then(function(e){return e.data});C.use($);C.use(Nt);C.mount("#app");
